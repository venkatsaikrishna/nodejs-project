trigger:
- main

pool:
  name: Default

variables:
  dockerRegistryServiceConnection: 'acr-srv-conn'
  imageRepository: 'cnit-nodejs-image'
  containerRegistry: 'cnitvsknodejs.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  poolName: 'Default'

stages:
- stage: Continuous_Integration
  displayName: Print Params, Test, Build and Push Stage
  jobs:
  - job: Print_Parameters
    displayName: Print Parameters
    pool:
      name: $(poolName)
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo 'Print All Parameters:'
          echo 'Service Connection: ' $(dockerRegistryServiceConnection)
          echo '`Image Repository: ' $(imageRepository)
          echo 'Azure container Registry: ' $(containerRegistry)
          echo 'Dockerfile Path: ' $(dockerfilePath)
          echo 'Build ID: ' $(tag)
          echo 'VM Image Name: ' $(poolName)
  - job: Npm_Install_and_Npm_Tests
    displayName: Npm Install and Npm Test
    dependsOn: Print_Parameters
    pool:
      name: $(poolName)
    steps:
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: '$(Build.SourcesDirectory)'
    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'run test'
  - job: Build
    displayName: Build
    dependsOn: Npm_Install_and_Npm_Tests
    pool:
      name: $(poolName)
    steps:
    - task: Docker@2
      displayName: Build and push the image to the Azure Container Registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/deployment/'
        ArtifactName: 'webinar-artifact'
        publishLocation: 'Container'
